name: "test build"
on:
  push:
    branches:
      - main
permissions:
  contents: read
jobs:
  build-ubuntu-extension:
    name: Building ubuntu
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Cache sqlite build
        id: cache-sqlite-build
        uses: actions/cache@v3
        with:
          path: vendor/sqlite
          key: ${{ runner.os }}-${{ hashFiles('vendor/get_sqlite.sh') }}
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        working-directory: vendor
        run: ./get_sqlite.sh
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        working-directory: vendor/sqlite
        run: ./configure && make

      - run: make loadable
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqlite-vector-ubuntu
          path: dist/debug/vector0.so
  build-ubuntu-python:
    runs-on: ubuntu-20.04
    needs: [build-ubuntu-extension]
    steps:
      - uses: actions/checkout@v3
      - name: Download workflow artifacts
        uses: actions/download-artifact@v3
        with:
          name: sqlite-vector-ubuntu
          path: dist/debug/
      - uses: actions/setup-python@v3
      - run: pip install wheel
      - run: make python
      - run: make datasette
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-vector-ubuntu-wheels
          path: dist/debug/wheels/*.whl
  test-ubuntu:
    runs-on: ubuntu-20.04
    needs: [build-ubuntu-extension, build-ubuntu-python]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-vector-ubuntu
          path: dist/debug/
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-vector-ubuntu-wheels
          path: dist/debug/
      - run: pip install --find-links dist/debug/ sqlite_vector
      - run: make test-loadable
      - run: make test-python
  build-macos-extension:
    name: Building macos-latest
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Cache sqlite build
        id: cache-sqlite-build
        uses: actions/cache@v3
        with:
          path: vendor/sqlite
          key: ${{ runner.os }}-${{ hashFiles('vendor/get_sqlite.sh') }}
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        working-directory: vendor
        run: ./get_sqlite.sh
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        working-directory: vendor/sqlite
        run: ./configure && make
      - run: brew install llvm
      - name: Cache cmake build
        id: cache-cmake-build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build
      - run: make loadable
        env:
          # https://stackoverflow.com/questions/48825416/missing-openmp-c-flags-openmp-c-lib-names
          CC: /usr/local/opt/llvm/bin/clang
          CXX: /usr/local/opt/llvm/bin/clang++
          LDFLAGS: "-L/usr/local/opt/llvm/lib"
          CPPFLAGS: "-I/usr/local/opt/llvm/include"
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqlite-vector-macos
          path: build/vector0.dylib
  build-macos-python:
    runs-on: macos-latest
    needs: [build-macos-extension]
    steps:
      - uses: actions/checkout@v3
      - name: Download workflow artifacts
        uses: actions/download-artifact@v3
        with:
          name: sqlite-vector-macos
          path: dist/debug/
      - uses: actions/setup-python@v3
      - run: pip install wheel
      - run: make python
      - run: make datasette
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-vector-macos-wheels
          path: dist/debug/wheels/*.whl
  test-macos:
    runs-on: macos-latest
    needs: [build-macos-extension, build-macos-python]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-vector-macos
          path: dist/debug/
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-vector-macos-wheels
          path: dist/debug/
      - run: brew install python
      - run: /usr/local/opt/python@3/libexec/bin/pip install --find-links dist/debug/ sqlite_vector
      - run: make test-loadable python=/usr/local/opt/python@3/libexec/bin/python
      - run: make test-python python=/usr/local/opt/python@3/libexec/bin/python