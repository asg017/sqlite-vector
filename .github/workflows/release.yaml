name: "release"
on:
  release:
    types: [published]
  workflow_dispatch:
permissions:
  contents: read
jobs:
  build-ubuntu:
    name: Building ubuntu-20.04
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Cache sqlite build
        id: cache-sqlite-build
        uses: actions/cache@v3
        with:
          path: vendor/sqlite
          key: ${{ runner.os }}-${{ hashFiles('vendor/get_sqlite.sh') }}
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        working-directory: vendor
        run: ./get_sqlite.sh
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        working-directory: vendor/sqlite
        run: ./configure && make
      - run: make loadable-release
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqlite-vector-ubuntu
          path: build_release/vector0.so
  build-macos:
    name: Building macos-latest
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Cache sqlite build
        id: cache-sqlite-build
        uses: actions/cache@v3
        with:
          path: vendor/sqlite
          key: ${{ runner.os }}-${{ hashFiles('vendor/get_sqlite.sh') }}
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        working-directory: vendor
        run: ./get_sqlite.sh
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        working-directory: vendor/sqlite
        run: ./configure && make
      - run: brew install llvm
      - name: Cache cmake build
        id: cache-cmake-build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build
      - run: make loadable-release
        env:
          # https://stackoverflow.com/questions/48825416/missing-openmp-c-flags-openmp-c-lib-names
          CC: /usr/local/opt/llvm/bin/clang
          CXX: /usr/local/opt/llvm/bin/clang++
          LDFLAGS: "-L/usr/local/opt/llvm/lib"
          CPPFLAGS: "-I/usr/local/opt/llvm/include"
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqlite-vector-macos
          path: build_release/vector0.dylib
  upload:
    name: upload
    needs: [build-macos, build-ubuntu]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download workflow artifacts
        uses: actions/download-artifact@v2
      - run: npm install tar-fs
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const script = require('.github/workflows/upload.js')
            await script({github, context})
